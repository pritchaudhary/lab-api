# Generated by Django 4.0.2 on 2022-02-06 09:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('master', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctorname', models.CharField(max_length=200)),
                ('firstname', models.CharField(max_length=200)),
                ('middlename', models.CharField(max_length=200)),
                ('lastname', models.CharField(max_length=200)),
                ('degree', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=200)),
                ('phone', models.IntegerField()),
                ('emailid', models.CharField(max_length=200)),
                ('flagstatus', models.CharField(max_length=1)),
                ('mobileno', models.IntegerField()),
                ('reportmailflag', models.CharField(max_length=1)),
                ('reportloginid', models.CharField(max_length=100)),
                ('reportpass', models.CharField(max_length=100)),
                ('intcode', models.CharField(max_length=100)),
                ('lastmodifiedon', models.DateField()),
                ('birthday', models.DateField()),
                ('anniversarydate', models.DateField()),
                ('licenseno', models.CharField(max_length=200)),
                ('proname', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctor',
                'db_table': 'Doctor',
            },
        ),
        migrations.CreateModel(
            name='Parameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, null=True)),
                ('report_name', models.CharField(max_length=100, unique=True)),
                ('unit', models.CharField(max_length=30)),
                ('rate', models.DecimalField(decimal_places=2, max_digits=20, null=True)),
                ('method', models.CharField(max_length=30)),
                ('suffix', models.CharField(max_length=2)),
                ('formulae', models.CharField(max_length=100)),
                ('dc', models.CharField(max_length=1)),
                ('precision', models.IntegerField()),
                ('default_status', models.CharField(max_length=1)),
                ('is_required', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Parameters',
                'verbose_name_plural': 'Parameters',
                'db_table': 'parameters',
            },
        ),
        migrations.CreateModel(
            name='Reason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reasontype', models.CharField(max_length=200, null=True)),
                ('reasonflag', models.CharField(max_length=200, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Reason',
                'verbose_name_plural': 'Reason',
                'db_table': 'Reason',
            },
        ),
        migrations.CreateModel(
            name='Sampletype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Sampletype',
                'verbose_name_plural': 'Sampletype',
                'db_table': 'sampletype',
            },
        ),
        migrations.CreateModel(
            name='Titles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('disporder', models.CharField(max_length=200)),
                ('gender', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Titles',
                'verbose_name_plural': 'Titles',
                'db_table': 'Titles',
            },
        ),
        migrations.AlterField(
            model_name='departments',
            name='name',
            field=models.CharField(max_length=200, null=True),
        ),
        migrations.CreateModel(
            name='SubDepartments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('shortdepName', models.CharField(max_length=20, null=True)),
                ('code', models.IntegerField(null=True)),
                ('barcodeprintflag', models.BooleanField(default=True)),
                ('emailflag', models.BooleanField(default=True)),
                ('smsFlag', models.BooleanField(default=True)),
                ('departments', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='master.departments')),
            ],
            options={
                'verbose_name': 'Sub Departments',
                'verbose_name_plural': 'Sub Departments',
                'db_table': 'sub_departments',
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('services_name', models.CharField(max_length=250, null=True)),
                ('report_name', models.CharField(max_length=100, unique=True)),
                ('servicesmapcode', models.CharField(max_length=30)),
                ('rate', models.DecimalField(decimal_places=2, max_digits=20, null=True)),
                ('method', models.CharField(max_length=30)),
                ('service_order', models.IntegerField()),
                ('report_format', models.IntegerField()),
                ('suppress_report_name', models.BooleanField(default=True)),
                ('service_footer', models.CharField(max_length=250, null=True)),
                ('service_outside', models.BooleanField(default=True)),
                ('service_printtogether', models.BooleanField(default=True)),
                ('service_web_flag', models.BooleanField(default=True)),
                ('services_alias', models.CharField(max_length=30)),
                ('services_days', models.IntegerField()),
                ('critical_flag', models.BooleanField(default=True)),
                ('sms_flag', models.BooleanField(default=True)),
                ('color_code', models.CharField(max_length=30)),
                ('disposalday', models.IntegerField()),
                ('gendertype', models.CharField(max_length=6)),
                ('specinstruction', models.CharField(max_length=250, null=True)),
                ('patinstruction', models.CharField(max_length=250, null=True)),
                ('techinstruction', models.CharField(max_length=250, null=True)),
                ('question_flag', models.BooleanField(default=True)),
                ('urgent_flag', models.BooleanField(default=True)),
                ('lab_processtime', models.IntegerField()),
                ('urgent_processtime', models.IntegerField()),
                ('consent_flag', models.BooleanField(default=True)),
                ('services_status', models.CharField(max_length=1)),
                ('services_forhomecoll', models.BooleanField(default=True)),
                ('ispdf_services', models.BooleanField(default=True)),
                ('ismanual_services', models.BooleanField(default=True)),
                ('gst_services', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sampletype', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='master.sampletype')),
                ('service_deptname', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='master.subdepartments')),
            ],
            options={
                'verbose_name': 'Services',
                'verbose_name_plural': 'services',
                'db_table': 'services',
            },
        ),
    ]
